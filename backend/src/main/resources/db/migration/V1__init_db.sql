CREATE TYPE STUDY_TYPE AS ENUM (
    'BACHELOR',
    'INDIVIDUAL_BACHELOR',
    'INDIVIDUAL_MASTER',
    'MASTER',
    'DOCTORATE',
    'UNIVERSITY_COURSE',
    'OTHER',
    'TEACHING_EXTENSION',
    'TEACHING_BACHELOR',
    'TEACHING_MASTER'
    );

CREATE TABLE STUDY
(
    NUMBER        TEXT PRIMARY KEY,
    TUG_ONLINE_ID INT        NOT NULL UNIQUE,
    NAME          TEXT       NOT NULL,
    ECTS          INT,
    TYPE          STUDY_TYPE NOT NULL,
    FETCHED       TIMESTAMP DEFAULT NULL
);

CREATE TYPE SEMESTER AS ENUM ('S', 'W');

CREATE TABLE COURSE
(
    ID          SERIAL PRIMARY KEY,
    NAME        TEXT     NOT NULL,
    DESCRIPTION TEXT     NOT NULL,
    SEMESTER    SEMESTER NOT NULL,
    TYPE        TEXT     NOT NULL
);

CREATE TABLE SEMESTER_COURSE
(
    COURSE_ID INT REFERENCES COURSE (ID),
    YEAR      INT NOT NULL,
    TUG_ID    INT NOT NULL UNIQUE
);

CREATE TABLE STUDY_SEGMENT -- e.g. Master/Bachelor
(
    ID           SERIAL PRIMARY KEY,
    NAME         TEXT NOT NULL,
    ECTS         INT,
    STUDY_NUMBER TEXT NOT NULL REFERENCES STUDY (NUMBER)
);

CREATE TABLE MODULE
(
    ID   SERIAL PRIMARY KEY,
    NAME TEXT NOT NULL
);

CREATE TABLE NODE
(
    ID           SERIAL PRIMARY KEY,
    STUDY_NUMBER TEXT NOT NULL REFERENCES STUDY (NUMBER),
    NODE_NR      INT  NOT NULL,
    NODE_NAME    TEXT NOT NULL,

    UNIQUE (STUDY_NUMBER, NODE_NR, NODE_NAME)
);

CREATE TABLE STUDY_SEGMENT_NODE
(
    STUDY_SEGMENT_ID INT REFERENCES STUDY_SEGMENT (ID),
    NODE_ID          INT REFERENCES NODE (ID),
    PRIMARY KEY (STUDY_SEGMENT_ID, NODE_ID)
);

CREATE TABLE MODULE_NODE
(
    MODULE_ID INT REFERENCES MODULE (ID),
    NODE_ID   INT REFERENCES NODE (ID),
    PRIMARY KEY (MODULE_ID, NODE_ID)
);
