CREATE TYPE STUDY_TYPE AS ENUM (
    'BACHELOR',
    'INDIVIDUAL_BACHELOR',
    'INDIVIDUAL_MASTER',
    'MASTER',
    'DOCTORATE',
    'UNIVERSITY_COURSE',
    'OTHER',
    'TEACHING_EXTENSION',
    'TEACHING_BACHELOR',
    'TEACHING_MASTER'
    );

CREATE TABLE STUDY
(
    NUMBER        TEXT PRIMARY KEY,
    TUG_ONLINE_ID INT        NOT NULL UNIQUE,
    NAME          TEXT       NOT NULL,
    ECTS          NUMERIC(5, 2),
    TYPE          STUDY_TYPE NOT NULL,
    FETCHED       TIMESTAMP DEFAULT NULL
);

CREATE TABLE STUDY_SEGMENT -- e.g. Master/Bachelor
(
    ID           SERIAL PRIMARY KEY,
    NAME         TEXT NOT NULL,
    ECTS         NUMERIC(5, 2),
    STUDY_NUMBER TEXT NOT NULL REFERENCES STUDY (NUMBER)
);

CREATE TABLE MODULE_GROUP -- Data Science, Games Engineering, etc
(
    ID           SERIAL PRIMARY KEY,
    NAME         TEXT NOT NULL,
    STUDY_NUMBER TEXT NOT NULL REFERENCES STUDY (NUMBER),
    UNIQUE (NAME, STUDY_NUMBER)
);

CREATE TABLE STUDY_SEGMENT_MODULE_GROUP
(
    STUDY_SEGMENT_ID INT REFERENCES STUDY_SEGMENT (ID),
    MODULE_GROUP_ID  INT REFERENCES MODULE_GROUP (ID),
    PRIMARY KEY (STUDY_SEGMENT_ID, MODULE_GROUP_ID)
);

CREATE TABLE MODULE -- Compulsory 1, 2, etc
(
    ID   SERIAL PRIMARY KEY,
    NAME TEXT NOT NULL
);

CREATE TABLE MODULE_GROUP_MODULE
(
    MODULE_GROUP_ID INT REFERENCES MODULE_GROUP (ID),
    MODULE_ID       INT REFERENCES MODULE (ID),
    PRIMARY KEY (MODULE_GROUP_ID, MODULE_ID)
);

CREATE TYPE SEMESTER AS ENUM ('S', 'W');

CREATE TABLE COURSE
(
    ID          SERIAL PRIMARY KEY,
    NAME        TEXT NOT NULL,
    DESCRIPTION TEXT,
    SEMESTER    SEMESTER,
    TYPE        TEXT,
    ECTS        NUMERIC(5, 2)
);

CREATE TABLE MODULE_COURSE
(
    MODULE_ID INT REFERENCES MODULE (ID),
    COURSE_ID INT REFERENCES COURSE (ID),
    PRIMARY KEY (MODULE_ID, COURSE_ID)
);
